import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { Toaster } from '@/components/ui/sonner';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Lightning, 
  Star, 
  MapPin, 
  Clock, 
  ShieldCheck,
  UserCheck,
  Wine,
  Calendar as CalendarIcon,
  MusicNote,
  Coffee,
  Atom,
  Rocket,
  Fire,
  Sparkle,
  Crown
} from '@phosphor-icons/react';

import { LanguageSwitcher } from './components/LanguageSwitcher';
import { MenuCard } from './components/MenuCard';
import { ServiceCard } from './components/ServiceCard';
import { CartDrawer } from './components/CartDrawer';
import { BookingDialog } from './components/BookingDialog';
import { SimpleAdminDashboard } from './components/SimpleAdminDashboard';
import { MobileNavigation } from './components/MobileNavigation';
import { EventsSection } from './components/EventsSection';
import { PayButton } from './components/PayButton';
import { RealTimeChat } from './components/RealTimeChat';
import { PremiumHero } from './components/PremiumHero';
import { CustomerTestimonials } from './components/CustomerTestimonials';
import { MenuSearch } from './components/MenuSearch';
import { FavoritesSection } from './components/FavoritesSection';
// import { AdvancedBookingSystem } from './components/AdvancedBookingSystem';
import { OwnerBackendSystem } from './components/OwnerBackendSystem';

import { useLanguageStore, translations } from './lib/translations';
import { fullMenu, services } from './data/content';
import { Service } from './types';
import { detectUserType } from './lib/pricing';
import { useIsMobile } from './hooks/use-mobile';

function App() {
  const { currentLanguage } = useLanguageStore();
  const t = translations[currentLanguage?.code || 'en'];
  const [selectedService, setSelectedService] = useState<Service | null>(null);
  const [bookingDialogOpen, setBookingDialogOpen] = useState(false);
  const [activeTab, setActiveTab] = useState('drinks');
  const [isAdminMode, setIsAdminMode] = useState(false);
  const [cartOpen, setCartOpen] = useState(false);
  const [coffeeEnergy, setCoffeeEnergy] = useState(0);
  const [filteredMenuItems, setFilteredMenuItems] = useState(fullMenu);
  const [filteredDrinks, setFilteredDrinks] = useState(fullMenu.filter(item => ['cocktail', 'beer', 'wine', 'liquor'].includes(item.category)));
  const isMobile = useIsMobile();
  
  const isGringo = detectUserType(currentLanguage?.code || 'en');

  // Coffee energy animation effect
  useEffect(() => {
    const interval = setInterval(() => {
      setCoffeeEnergy(prev => (prev + 1) % 100);
    }, 100);
    return () => clearInterval(interval);
  }, []);

  const handleBookService = (service: Service) => {
    setSelectedService(service);
    setBookingDialogOpen(true);
  };

  const closeBookingDialog = () => {
    setBookingDialogOpen(false);
    setSelectedService(null);
  };

  const nuclearVariants = {
    initial: { scale: 0.8, opacity: 0, rotateY: -180 },
    animate: { scale: 1, opacity: 1, rotateY: 0 },
    exit: { scale: 0.8, opacity: 0, rotateY: 180 }
  };

  // Removed infinite pulse animation - use static styling instead

  return (
    <div className={`min-h-screen bg-background power-pattern ${isMobile ? 'pb-20' : ''}`}>
      {/* PREMIUM NAVIGATION BAR */}
      <nav className="border-b-2 border-nuclear-blue bg-card/80 backdrop-blur-xl sticky top-0 z-50 nuclear-glow">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-20">
            <motion.div 
              className="flex items-center gap-4"
              initial={{ x: -100, opacity: 0 }}
              animate={{ x: 0, opacity: 1 }}
              transition={{ duration: 0.8, ease: "easeOut" }}
            >
              <div className="flex items-center gap-3">
                <div className="w-14 h-14 bg-gradient-to-br from-nuclear-blue to-electric-cyan rounded-full flex items-center justify-center nuclear-glow">
                  <Lightning size={32} className="text-primary-foreground" weight="fill" />
                </div>
                <div>
                  <h1 className="text-2xl font-black nuclear-text">üá®üá¥ GATO BLANCO üá®üá¥</h1>
                  <p className="text-sm text-electric-cyan font-medium">
                    {currentLanguage?.code === 'es' ? 'CAF√â COLOMBIANO PREMIUM' : 'PREMIUM COLOMBIAN COFFEE'}
                  </p>
                </div>
              </div>
            </motion.div>
            
            <motion.div 
              className="flex items-center gap-2 sm:gap-4"
              initial={{ x: 100, opacity: 0 }}
              animate={{ x: 0, opacity: 1 }}
              transition={{ duration: 0.8, ease: "easeOut", delay: 0.2 }}
            >
              {/* Coffee Meter */}
              <div className="hidden sm:flex items-center gap-2 bg-card/50 rounded-lg px-3 py-1 nuclear-border">
                <Coffee size={16} className="text-nuclear-blue" />
                <div className="w-16 h-2 bg-deep-space rounded-full overflow-hidden">
                  <motion.div 
                    className="h-full bg-gradient-to-r from-nuclear-blue to-electric-cyan"
                    style={{ width: `${coffeeEnergy}%` }}
                    transition={{ duration: 0.1 }}
                  />
                </div>
                <span className="text-xs text-electric-cyan font-mono">{coffeeEnergy}%</span>
              </div>
              
              {isGringo && (
                <Badge className="bg-plasma-blue/20 text-plasma-blue border-plasma-blue nuclear-glow hidden sm:flex">
                  <Crown size={14} className="mr-1" />
                  {currentLanguage?.code === 'es' ? 'VISITANTE VIP PREMIUM' : 'VIP PREMIUM VISITOR'}
                </Badge>
              )}
              <LanguageSwitcher />
              {!isMobile && <CartDrawer />}
                <Button
                variant="outline"
                size="sm"
                onClick={() => setIsAdminMode(!isAdminMode)}
                className="gap-2 nuclear-button"
              >
                <UserCheck size={16} />
                <span className="hidden sm:inline">
                  {isAdminMode 
                    ? (currentLanguage?.code === 'es' ? 'SALIR ADMIN' : 'EXIT ADMIN')
                    : (currentLanguage?.code === 'es' ? 'üöÄ ADMIN' : 'üöÄ ADMIN')
                  }
                </span>
              </Button>
            </motion.div>
          </div>
        </div>
      </nav>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8">
        {isAdminMode ? (
          <motion.div
            initial={nuclearVariants.initial}
            animate={nuclearVariants.animate}
            exit={nuclearVariants.exit}
            transition={{ duration: 0.6 }}
          >
            <div className="space-y-8">
              <SimpleAdminDashboard />
            </div>
          </motion.div>
        ) : (
        <>
          {/* Debug: Test buttons always visible */}
          <div className="fixed top-4 right-4 z-50 flex gap-2">
            <button
              onClick={() => console.log('üî¥ TEST BUTTON CLICKED')}
              className="bg-red-500 text-white px-3 py-2 rounded text-xs font-bold min-h-[44px] touch-manipulation"
            >
              TEST
            </button>
            <button
              onClick={() => {
                localStorage.removeItem('cart');
                window.location.reload();
                console.log('üßπ CART CLEARED - PAGE RELOADING');
              }}
              className="bg-blue-500 text-white px-3 py-2 rounded text-xs font-bold min-h-[44px] touch-manipulation"
            >
              CLEAR CART
            </button>
          </div>

          <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-6 sm:space-y-8">
          {!isMobile && (
            <motion.div
              initial={{ y: -50, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              transition={{ duration: 0.6, delay: 0.4 }}
            >
              <TabsList className="grid w-full grid-cols-7 lg:w-auto lg:inline-grid nuclear-border bg-card/50 backdrop-blur-sm">
                <TabsTrigger value="home" className="text-xs sm:text-sm nuclear-button">üè† {t.nav.home}</TabsTrigger>
                <TabsTrigger value="menu" className="text-xs sm:text-sm nuclear-button">‚òï {t.nav.menu}</TabsTrigger>
                <TabsTrigger value="drinks" className="text-xs sm:text-sm nuclear-button">üçπ {t.nav.drinks}</TabsTrigger>
                <TabsTrigger value="favorites" className="text-xs sm:text-sm nuclear-button">‚ù§Ô∏è {currentLanguage?.code === 'es' ? 'Favoritos' : 'Favorites'}</TabsTrigger>
                <TabsTrigger value="services" className="text-xs sm:text-sm nuclear-button">‚ö° {t.nav.services}</TabsTrigger>
                <TabsTrigger value="events" className="text-xs sm:text-sm nuclear-button">üéâ {t.nav.events}</TabsTrigger>
                <TabsTrigger value="about" className="text-xs sm:text-sm nuclear-button">‚ÑπÔ∏è {t.nav.about}</TabsTrigger>
                <TabsTrigger value="owner" className="text-xs sm:text-sm nuclear-button">üöÄ {isGringo ? 'Owner' : 'Due√±o'}</TabsTrigger>
              </TabsList>
            </motion.div>
          )}

          <AnimatePresence mode="wait">
            <TabsContent value="home" className="space-y-0">
              {/* Premium Hero Section */}
              <PremiumHero />

              {/* Customer Testimonials */}
              <CustomerTestimonials />

              {/* Feature Highlights */}
              <motion.section 
                className="py-20 bg-white dark:bg-gray-900"
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                viewport={{ once: true }}
                transition={{ duration: 0.6 }}
              >
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                  <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
                    {[
                      { icon: Star, value: "‚≠ê 4.9/5", label: currentLanguage?.code === 'es' ? "CALIFICACI√ìN PREMIUM" : "PREMIUM RATING", color: "text-yellow-400" },
                      { icon: Coffee, value: "‚òï 1000+", label: currentLanguage?.code === 'es' ? "TAZAS SERVIDAS" : "CUPS SERVED", color: "text-amber-600" },
                      { icon: Lightning, value: "üá®üá¥ AUT√âNTICO", label: currentLanguage?.code === 'es' ? "CAF√â COLOMBIANO" : "COLOMBIAN COFFEE", color: "text-orange-600" },
                      { icon: Sparkle, value: "‚ú® LEGENDARIO", label: currentLanguage?.code === 'es' ? "SABOR PAISA" : "PAISA FLAVOR", color: "text-amber-500" }
                    ].map((stat, index) => (
                      <motion.div
                        key={index}
                        initial={{ opacity: 0, y: 30 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        viewport={{ once: true }}
                        transition={{ delay: index * 0.1, duration: 0.5 }}
                        whileHover={{ scale: 1.05 }}
                      >
                        <Card className="text-center border-2 border-amber-100 dark:border-amber-900/30 hover:shadow-xl transition-all">
                          <CardHeader>
                            <div className={`${stat.color} mx-auto`}>
                              <stat.icon size={40} weight="fill" />
                            </div>
                            <CardTitle className="text-3xl font-black bg-gradient-to-r from-amber-600 to-orange-600 bg-clip-text text-transparent">
                              {stat.value}
                            </CardTitle>
                            <CardDescription className="text-gray-600 dark:text-gray-400 font-semibold">
                              {stat.label}
                            </CardDescription>
                          </CardHeader>
                        </Card>
                      </motion.div>
                    ))}
                  </div>
                </div>
              </motion.section>
            </TabsContent>
          </AnimatePresence>

          <TabsContent value="menu" className="space-y-8">
            <motion.div 
              className="text-center space-y-4"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
            >
              <h2 className="text-4xl font-black nuclear-text">
                {currentLanguage?.code === 'es' ? 'üá®üá¥ MEN√ö COLOMBIANO üá®üá¥' : 'üá®üá¥ COLOMBIAN MENU üá®üá¥'}
              </h2>
              <p className="text-xl text-electric-cyan">
                {currentLanguage?.code === 'es' ? 'SABORES AUT√âNTICOS DE COLOMBIA' : 'AUTHENTIC FLAVORS OF COLOMBIA'}
              </p>
            </motion.div>
            
            {/* Menu Search & Filter */}
            <MenuSearch items={fullMenu} onFilterChange={setFilteredMenuItems} />
            
            <Tabs defaultValue="coffee" className="space-y-6">
              <TabsList className="grid w-full grid-cols-4 nuclear-border">
                <TabsTrigger value="coffee" className="nuclear-button">
                  ‚òï {currentLanguage?.code === 'es' ? 'CAF√â' : 'COFFEE'}
                </TabsTrigger>
                <TabsTrigger value="food" className="nuclear-button">
                  üçï {currentLanguage?.code === 'es' ? 'COMIDA' : 'FOOD'}
                </TabsTrigger>
                <TabsTrigger value="pastries" className="nuclear-button">
                  ü•ê {currentLanguage?.code === 'es' ? 'PASTELES' : 'PASTRIES'}
                </TabsTrigger>
                <TabsTrigger value="nonalcoholic" className="nuclear-button">
                  ü•§ {currentLanguage?.code === 'es' ? 'TODO EL D√çA' : 'ALL DAY'}
                </TabsTrigger>
              </TabsList>
              
              <TabsContent value="coffee" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredMenuItems.filter(item => item.category === 'coffee').map((item, index) => (
                  <motion.div
                    key={item.id}
                    initial={{ opacity: 0, scale: 0.8, rotateX: -90 }}
                    animate={{ opacity: 1, scale: 1, rotateX: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <MenuCard item={item} />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="food" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredMenuItems.filter(item => item.category === 'food').map((item, index) => (
                  <motion.div
                    key={item.id}
                    initial={{ opacity: 0, scale: 0.8, rotateX: -90 }}
                    animate={{ opacity: 1, scale: 1, rotateX: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <MenuCard item={item} />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="pastries" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredMenuItems.filter(item => item.category === 'pastry').map((item, index) => (
                  <motion.div
                    key={item.id}
                    initial={{ opacity: 0, scale: 0.8, rotateX: -90 }}
                    animate={{ opacity: 1, scale: 1, rotateX: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <MenuCard item={item} />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="nonalcoholic" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {fullMenu.filter(item => ['coffee', 'food', 'pastry'].includes(item.category)).map((item, index) => (
                  <motion.div
                    key={item.id}
                    initial={{ opacity: 0, scale: 0.8, rotateX: -90 }}
                    animate={{ opacity: 1, scale: 1, rotateX: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <MenuCard item={item} />
                  </motion.div>
                ))}
              </TabsContent>
            </Tabs>
          </TabsContent>

          <TabsContent value="drinks" className="space-y-8">
            <motion.div 
              className="text-center space-y-4"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
            >
              <h2 className="text-4xl font-black nuclear-text">
                {currentLanguage?.code === 'es' ? 'üçπ C√ìCTELES ARTESANALES üçπ' : 'üçπ ARTISAN COCKTAILS üçπ'}
              </h2>
              <p className="text-xl text-electric-cyan">
                {currentLanguage?.code === 'es' ? 'BEBIDAS PREMIUM COLOMBIANAS' : 'PREMIUM COLOMBIAN BEVERAGES'}
              </p>
              <div className="flex flex-col sm:flex-row gap-2 justify-center">
                <Badge className="bg-nuclear-blue/20 text-nuclear-blue border-nuclear-blue nuclear-glow">
                  {currentLanguage?.code === 'es' ? 'üçπ ESPECIALES HORA FELIZ' : 'üçπ HAPPY HOUR SPECIALS'}
                </Badge>
                <Badge className="bg-plasma-blue/20 text-plasma-blue border-plasma-blue nuclear-glow">
                  {currentLanguage?.code === 'es' ? 'üåô SAL√ìN NOCTURNO' : 'üåô MIDNIGHT LOUNGE'}
                </Badge>
              </div>
            </motion.div>
            
            {/* Drinks Search */}
            <MenuSearch 
              items={fullMenu.filter(item => ['cocktail', 'beer', 'wine', 'liquor'].includes(item.category))} 
              onFilterChange={setFilteredDrinks} 
            />
            
            <Tabs defaultValue="cocktails" className="space-y-6">
              <TabsList className="grid w-full grid-cols-4 nuclear-border">
                <TabsTrigger value="cocktails" className="nuclear-button">
                  üç∏ {currentLanguage?.code === 'es' ? 'C√ìCTELES' : 'COCKTAILS'}
                </TabsTrigger>
                <TabsTrigger value="beer" className="nuclear-button">
                  üç∫ {currentLanguage?.code === 'es' ? 'CERVEZA' : 'BEER'}
                </TabsTrigger>
                <TabsTrigger value="spirits" className="nuclear-button">
                  ü•É {currentLanguage?.code === 'es' ? 'LICORES' : 'SPIRITS'}
                </TabsTrigger>
                <TabsTrigger value="wine" className="nuclear-button">
                  üç∑ {currentLanguage?.code === 'es' ? 'VINO' : 'WINE'}
                </TabsTrigger>
              </TabsList>
              
              <TabsContent value="cocktails" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredDrinks.filter(item => item.category === 'cocktail').map((item, index) => (
                  <motion.div
                    key={item.id}
                    initial={{ opacity: 0, scale: 0.8, rotateZ: -45 }}
                    animate={{ opacity: 1, scale: 1, rotateZ: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <MenuCard item={item} />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="beer" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredDrinks.filter(item => item.category === 'beer').map((item, index) => (
                  <motion.div
                    key={item.id}
                    initial={{ opacity: 0, scale: 0.8, rotateZ: -45 }}
                    animate={{ opacity: 1, scale: 1, rotateZ: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <MenuCard item={item} />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="spirits" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredDrinks.filter(item => item.category === 'liquor').map((item, index) => (
                  <motion.div
                    key={item.id}
                    initial={{ opacity: 0, scale: 0.8, rotateZ: -45 }}
                    animate={{ opacity: 1, scale: 1, rotateZ: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <MenuCard item={item} />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="wine" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredDrinks.filter(item => item.category === 'wine').map((item, index) => (
                  <motion.div
                    key={item.id}
                    initial={{ opacity: 0, scale: 0.8, rotateZ: -45 }}
                    animate={{ opacity: 1, scale: 1, rotateZ: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <MenuCard item={item} />
                  </motion.div>
                ))}
              </TabsContent>
            </Tabs>
          </TabsContent>

          <TabsContent value="favorites" className="space-y-8">
            <FavoritesSection />
          </TabsContent>

          <TabsContent value="events" className="space-y-8">
            <motion.div
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.6 }}
            >
              <EventsSection />
            </motion.div>
          </TabsContent>

          <TabsContent value="services" className="space-y-8">
            <motion.div 
              className="text-center space-y-4"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
            >
              <h2 className="text-4xl font-black nuclear-text">
                {currentLanguage?.code === 'es' ? 'üá®üá¥ SERVICIOS PREMIUM üá®üá¥' : 'üá®üá¥ PREMIUM SERVICES üá®üá¥'}
              </h2>
              <p className="text-xl text-electric-cyan">
                {currentLanguage?.code === 'es' ? 'EXPERIENCIAS EXCLUSIVAS PARA EXTRANJEROS' : 'EXCLUSIVE EXPERIENCES FOR FOREIGNERS'}
              </p>
              {isGringo && (
                <Badge className="bg-plasma-blue/20 text-plasma-blue border-plasma-blue nuclear-glow text-lg px-6 py-3">
                  <Crown size={20} className="mr-2" />
                  {currentLanguage?.code === 'es' ? 'üéØ PRECIOS VIP PREMIUM' : 'üéØ VIP PREMIUM PRICING'}
                </Badge>
              )}
            </motion.div>
            
            <Tabs defaultValue="tourism" className="space-y-6">
              <TabsList className="grid w-full grid-cols-3 lg:grid-cols-6 nuclear-border">
                <TabsTrigger value="tourism" className="nuclear-button">
                  üåé {currentLanguage?.code === 'es' ? 'TURISMO' : 'TOURISM'}
                </TabsTrigger>
                <TabsTrigger value="classes" className="nuclear-button">
                  üìö {currentLanguage?.code === 'es' ? 'CLASES' : 'CLASSES'}
                </TabsTrigger>
                <TabsTrigger value="events" className="nuclear-button">
                  üéâ {currentLanguage?.code === 'es' ? 'EVENTOS' : 'EVENTS'}
                </TabsTrigger>
                <TabsTrigger value="party" className="nuclear-button">
                  üéä {currentLanguage?.code === 'es' ? 'FIESTA' : 'PARTY'}
                </TabsTrigger>
                <TabsTrigger value="vip" className="nuclear-button">
                  üëë VIP
                </TabsTrigger>
                <TabsTrigger value="nightlife" className="nuclear-button">
                  üåô {currentLanguage?.code === 'es' ? 'VIDA NOCTURNA' : 'NIGHTLIFE'}
                </TabsTrigger>
              </TabsList>
              
              <TabsContent value="tourism" className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {services.filter(service => service.category === 'tourism').map((service, index) => (
                  <motion.div
                    key={service.id}
                    initial={{ opacity: 0, x: -100, rotateY: -90 }}
                    animate={{ opacity: 1, x: 0, rotateY: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <ServiceCard 
                      service={service} 
                      onBook={handleBookService}
                    />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="classes" className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {services.filter(service => service.category === 'classes').map((service, index) => (
                  <motion.div
                    key={service.id}
                    initial={{ opacity: 0, x: -100, rotateY: -90 }}
                    animate={{ opacity: 1, x: 0, rotateY: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <ServiceCard 
                      service={service} 
                      onBook={handleBookService}
                    />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="events" className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {services.filter(service => service.category === 'events').map((service, index) => (
                  <motion.div
                    key={service.id}
                    initial={{ opacity: 0, x: -100, rotateY: -90 }}
                    animate={{ opacity: 1, x: 0, rotateY: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <ServiceCard 
                      service={service} 
                      onBook={handleBookService}
                    />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="party" className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {services.filter(service => service.category === 'party').map((service, index) => (
                  <motion.div
                    key={service.id}
                    initial={{ opacity: 0, x: -100, rotateY: -90 }}
                    animate={{ opacity: 1, x: 0, rotateY: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <ServiceCard 
                      service={service} 
                      onBook={handleBookService}
                    />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="vip" className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {services.filter(service => service.category === 'vip').map((service, index) => (
                  <motion.div
                    key={service.id}
                    initial={{ opacity: 0, x: -100, rotateY: -90 }}
                    animate={{ opacity: 1, x: 0, rotateY: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <ServiceCard 
                      service={service} 
                      onBook={handleBookService}
                    />
                  </motion.div>
                ))}
              </TabsContent>
              
              <TabsContent value="nightlife" className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {services.filter(service => service.category === 'nightlife').map((service, index) => (
                  <motion.div
                    key={service.id}
                    initial={{ opacity: 0, x: -100, rotateY: -90 }}
                    animate={{ opacity: 1, x: 0, rotateY: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.6 }}
                  >
                    <ServiceCard 
                      service={service} 
                      onBook={handleBookService}
                    />
                  </motion.div>
                ))}
              </TabsContent>
            </Tabs>
          </TabsContent>

          <TabsContent value="about" className="space-y-8">
            <motion.div 
              className="max-w-4xl mx-auto"
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.6 }}
            >
              <Card className="overflow-hidden nuclear-card">
                <div className="h-4 bg-gradient-to-r from-nuclear-blue via-electric-cyan to-plasma-blue"></div>
                <CardHeader className="text-center">
                  <CardTitle className="text-3xl sm:text-4xl font-black nuclear-text">
                    {currentLanguage?.code === 'es' ? '‚òï REVOLUCI√ìN CAFETERA ‚òï' : '‚òï COFFEE REVOLUTION ‚òï'}
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-8">
                  <p className="text-lg text-muted-foreground leading-relaxed">
                    {currentLanguage?.code === 'es'
                      ? 'Bienvenido a la experiencia de caf√© colombiano m√°s aut√©ntica en Zona Rosa! üá®üá¥ Nuestro caf√© premium celebra la rica herencia de la cultura cafetera colombiana mientras crea experiencias inolvidables para visitantes de todo el mundo. ¬°Combinamos la hospitalidad paisa tradicional con la excelencia del servicio moderno! ‚òïüéâ'
                      : t.about.story
                    }
                  </p>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-8 pt-6">
                    {[
                      { 
                        icon: MapPin, 
                        title: currentLanguage?.code === 'es' ? "UBICACI√ìN PRIVILEGIADA" : "PRIME LOCATION", 
                        text: currentLanguage?.code === 'es' ? "Coraz√≥n de Zona Rosa, Medell√≠n üó∫Ô∏è" : "Heart of Zona Rosa, Medell√≠n üó∫Ô∏è", 
                        color: "text-nuclear-blue" 
                      },
                      { 
                        icon: Clock, 
                        title: currentLanguage?.code === 'es' ? "HORARIOS EXTENDIDOS" : "EXTENDED HOURS", 
                        text: currentLanguage?.code === 'es' ? "Abierto hasta muy tarde ‚è∞" : "Open until very late ‚è∞", 
                        color: "text-electric-cyan" 
                      },
                      { 
                        icon: MusicNote, 
                        title: currentLanguage?.code === 'es' ? "VIDA NOCTURNA PAISA" : "PAISA NIGHTLIFE", 
                        text: currentLanguage?.code === 'es' ? "M√∫sica en vivo y ambiente aut√©ntico üéµ" : "Live music and authentic atmosphere üéµ", 
                        color: "text-plasma-blue" 
                      },
                      { 
                        icon: CalendarIcon, 
                        title: currentLanguage?.code === 'es' ? "EVENTOS ESPECIALES" : "SPECIAL EVENTS", 
                        text: currentLanguage?.code === 'es' ? "Experiencias culturales diarias üéâ" : "Daily cultural experiences üéâ", 
                        color: "text-nuclear-blue" 
                      }
                    ].map((item, index) => (
                      <motion.div
                        key={index}
                        className="space-y-2"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1, duration: 0.5 }}
                      >
                        <div className={`flex items-center gap-3 ${item.color}`}>
                          <item.icon size={24} weight="fill" />
                          <span className="font-bold">{item.title}</span>
                        </div>
                        <p className="text-muted-foreground font-medium">{item.text}</p>
                      </motion.div>
                    ))}
                  </div>

                  {/* Gringo Connection Section - Show to all visitors */}
                  {true && (
                    <motion.div
                      className="mt-8 p-6 bg-gradient-to-r from-plasma-blue/10 to-electric-cyan/10 rounded-lg border border-plasma-blue/20"
                      initial={{ opacity: 0, scale: 0.95 }}
                      animate={{ opacity: 1, scale: 1 }}
                      transition={{ delay: 0.8, duration: 0.6 }}
                    >
                      <div className="text-center mb-6">
                        <h3 className="text-2xl font-black nuclear-text mb-2">
                          üåç {currentLanguage?.code === 'es' ? 'LA CONEXI√ìN GRINGO' : 'THE GRINGO CONNECTION'} üåç
                        </h3>
                        <p className="text-lg text-electric-cyan font-medium">
                          {currentLanguage?.code === 'es'
                            ? 'Tu v√≠nculo a la aut√©ntica cultura paisa y comunidad'
                            : 'Your link to authentic Paisa culture and community'
                          }
                        </p>
                      </div>

                      <div className="space-y-4">
                        <p className="text-muted-foreground leading-relaxed">
                          {currentLanguage?.code === 'es'
                            ? 'La Conexi√≥n Gringo se asocia con Gato Blanco para ofrecer a expatriados y n√≥madas digitales espacios de coworking, clases de salsa y espa√±ol, tours seleccionados y un lugar seguro para conectar. Fundada por Daniel con los due√±os Yeri y Dani, fue creada para ayudar a los reci√©n llegados a conocer Medell√≠n como un local.'
                            : 'The Gringo Connection partners with Gato Blanco to provide expats and digital nomads with coworking spaces, salsa and Spanish classes, curated tours, and a safe space to connect. Founded by Daniel with owners Yeri and Dani, it was built to help newcomers experience Medell√≠n like a local.'
                          }
                        </p>

                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                          <div>
                            <h4 className="font-bold text-nuclear-blue mb-3">
                              ‚ú® {currentLanguage?.code === 'es' ? 'VENTAJAS EXCLUSIVAS' : 'EXCLUSIVE PERKS'}
                            </h4>
                            <ul className="space-y-2 text-sm">
                              <li className="flex items-start gap-2">
                                <span className="text-electric-cyan">üíº</span>
                                <span>{currentLanguage?.code === 'es'
                                  ? 'Espacio de coworking con internet de alta velocidad y caf√© incluido'
                                  : 'Coworking space with high-speed internet and coffee included'
                                }</span>
                              </li>
                              <li className="flex items-start gap-2">
                                <span className="text-electric-cyan">üíÉ</span>
                                <span>{currentLanguage?.code === 'es'
                                  ? 'Clases semanales de salsa y espa√±ol'
                                  : 'Weekly salsa and Spanish classes'
                                }</span>
                              </li>
                              <li className="flex items-start gap-2">
                                <span className="text-electric-cyan">üó∫Ô∏è</span>
                                <span>{currentLanguage?.code === 'es'
                                  ? 'Tours seleccionados a Guatap√©, fincas cafeteras y lugares locales'
                                  : 'Curated tours to Guatap√©, coffee farms and local hotspots'
                                }</span>
                              </li>
                              <li className="flex items-start gap-2">
                                <span className="text-electric-cyan">ü§ù</span>
                                <span>{currentLanguage?.code === 'es'
                                  ? 'Eventos de networking para expatriados y emprendedores locales'
                                  : 'Networking events for expats and local entrepreneurs'
                                }</span>
                              </li>
                            </ul>
                          </div>

                          <div>
                            <h4 className="font-bold text-plasma-blue mb-3">
                              üéØ {currentLanguage?.code === 'es' ? 'SERVICIOS ESPECIALIZADOS' : 'SPECIALIZED SERVICES'}
                            </h4>
                            <ul className="space-y-2 text-sm">
                              <li className="flex items-start gap-2">
                                <span className="text-plasma-blue">üéí</span>
                                <span>{currentLanguage?.code === 'es'
                                  ? 'Tour de Mochileros ‚Äì Arte callejero, mercados locales y transporte p√∫blico'
                                  : 'Backpacker Budget Tour ‚Äì Street art, local markets and public transport'
                                }</span>
                              </li>
                              <li className="flex items-start gap-2">
                                <span className="text-plasma-blue">üíº</span>
                                <span>{currentLanguage?.code === 'es'
                                  ? 'Experiencia Ejecutiva VIP ‚Äì Chofer privado, cenas exclusivas'
                                  : 'VIP Executive Experience ‚Äì Private chauffeur, upscale dining'
                                }</span>
                              </li>
                              <li className="flex items-start gap-2">
                                <span className="text-plasma-blue">üí∞</span>
                                <span>{currentLanguage?.code === 'es'
                                  ? 'Programa de Afiliados ‚Äì Gana comisiones refiriendo viajeros'
                                  : 'Affiliate Partner Program ‚Äì Earn commissions by referring travelers'
                                }</span>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </div>
                    </motion.div>
                  )}

                </CardContent>
              </Card>
            </motion.div>
          </TabsContent>

          {/* Owner Dashboard */}
    <TabsContent value="owner" className="space-y-8">
      {/* Temporarily disabled for deployment
      <OwnerBackendSystem
        isGringo={isGringo}
        currentLanguage={currentLanguage}
      />
      */}
      <div className="text-center py-8">
        <h3 className="text-2xl font-bold mb-4">üöÄ Owner Dashboard Coming Soon</h3>
        <p className="text-muted-foreground">Advanced business management tools will be available shortly.</p>
      </div>
    </TabsContent>
        </Tabs>
        </>
        )}
      </main>

      {/* Mobile Navigation */}
      <MobileNavigation 
        activeTab={activeTab}
        onTabChange={setActiveTab}
        onCartOpen={() => setCartOpen(true)}
      />

      <footer className={`border-t-2 border-nuclear-blue nuclear-glow mt-16 ${isMobile ? 'mb-20' : ''}`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <motion.div 
            className="text-center space-y-4"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 2 }}
          >
            <p className="text-electric-cyan font-bold text-lg">
              {currentLanguage?.code === 'es'
                ? 'üá®üá¥ ¬© 2024 GATO BLANCO - CAF√â COLOMBIANO AUT√âNTICO üá®üá¥'
                : 'üá®üá¥ ¬© 2024 GATO BLANCO - AUTHENTIC COLOMBIAN COFFEE üá®üá¥'
              }
            </p>
            <p className="text-nuclear-blue font-medium">
              {currentLanguage?.code === 'es'
                ? '‚òï Zona Rosa, Medell√≠n - Caf√© Premium & Servicios para Visitantes ‚òï'
                : '‚òï Zona Rosa, Medell√≠n - Premium Coffee & Visitor Services ‚òï'
              }
            </p>
            <div className="flex justify-center gap-4 text-plasma-blue">
              <Coffee size={20} />
              <Wine size={20} />
              <MusicNote size={20} />
              <CalendarIcon size={20} />
              <MapPin size={20} />
            </div>
          </motion.div>
        </div>
      </footer>

      <BookingDialog
        service={selectedService}
        open={bookingDialogOpen}
        onClose={closeBookingDialog}
      />
      
      {/* Mobile Cart Drawer */}
      {isMobile && (
        <CartDrawer />
      )}

    {/* Real-time Chat Support - Temporarily disabled for deployment
    <RealTimeChat
      currentLanguage={currentLanguage}
      isGringo={detectUserType(currentLanguage?.code || 'en')}
    />
    */}

      <Toaster position="top-right" />
    </div>
  );
}

export default App;